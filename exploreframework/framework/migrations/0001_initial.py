# Generated by Django 3.0.6 on 2020-06-13 19:51

from django.db import migrations, models
import django.db.models.deletion
import scripts.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Database',
            fields=[
                ('databasehashkey', models.TextField(primary_key=True, serialize=False, verbose_name='Database Hashkey')),
                ('applicationname', models.CharField(max_length=200, null=True, verbose_name='Application Name')),
                ('databasename', models.CharField(max_length=200, null=True, verbose_name='Database Name')),
                ('hostname', models.CharField(max_length=200, null=True, verbose_name='Hostname')),
                ('databasetype', models.CharField(max_length=200, null=True, verbose_name='Database Type')),
                ('port', models.CharField(max_length=200, null=True, verbose_name='Port')),
                ('username', models.CharField(max_length=200, null=True, verbose_name='Username')),
                ('password', models.CharField(max_length=200, null=True, verbose_name='Password')),
                ('sourcesystemcreatedby', models.CharField(max_length=200, null=True)),
                ('sourcesystemcreatedtime', models.CharField(max_length=200, null=True)),
            ],
            options={
                'db_table': 'database',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Engine',
            fields=[
                ('enginehashkey', models.TextField(primary_key=True, serialize=False, verbose_name='EngineHashkey')),
                ('enginename', models.TextField(verbose_name='Engine Name')),
                ('sourcesystemcreatedby', models.TextField()),
                ('sourcesystemcreatedtime', models.TextField()),
            ],
            options={
                'db_table': 'engine',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('filehashkey', models.TextField(primary_key=True, serialize=False, verbose_name='FileHashKey')),
                ('filename', models.TextField(verbose_name='File Name')),
                ('location', models.TextField(verbose_name='Location Server')),
                ('delimiter', models.TextField(verbose_name='delimiter')),
                ('path', models.TextField(verbose_name='Path')),
                ('sourcesystemcreatedby', models.TextField()),
                ('sourcesystemcreatedtime', models.TextField()),
            ],
            options={
                'db_table': 'file',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MultipleRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(default='', max_length=100)),
                ('filepath', models.CharField(default='', max_length=100)),
                ('createdby', models.CharField(max_length=100)),
                ('createdat', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(default='', max_length=30)),
                ('excel', models.FileField(upload_to='objectrelation/multiple/', validators=[scripts.validators.validate_file_extension])),
            ],
            options={
                'db_table': 'multiplerelation',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Object',
            fields=[
                ('objecthashkey', models.TextField(primary_key=True, serialize=False, verbose_name='Object HashKey')),
                ('objectcode', models.TextField(verbose_name='Object Code')),
                ('objectname', models.TextField(verbose_name='Object Name')),
                ('objectdesc', models.TextField(verbose_name='Object Descriptions')),
                ('sourcesystemcreatedby', models.TextField()),
                ('sourcesystemcreatedtime', models.TextField()),
            ],
            options={
                'db_table': 'object',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ObjectProcessLog',
            fields=[
                ('objectprocessloghashkey', models.TextField(primary_key=True, serialize=False, verbose_name='Object Process Log')),
                ('objectprocesshashkey', models.TextField(verbose_name='ObjectProcessHashkey')),
                ('logcode', models.TextField(verbose_name='Log Code')),
                ('starttime', models.TextField(verbose_name='Start Time')),
                ('finishtime', models.TextField(verbose_name='Finish Time')),
                ('processtime', models.TextField(verbose_name='Process Time')),
                ('status', models.TextField(verbose_name='Status Process')),
                ('location', models.TextField(verbose_name='Location Process')),
                ('rowcountsource', models.TextField(verbose_name='Row Count Source')),
                ('rowcounttarget', models.TextField(verbose_name='Row Count Target')),
                ('sourcesystemcreatedby', models.TextField()),
                ('sourcesystemcreatedtime', models.TextField()),
            ],
            options={
                'db_table': 'objectprocesslog',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ObjectProcessObjectSnapShotLog',
            fields=[
                ('objectprocessobjectsnapshotloghashkey', models.TextField(primary_key=True, serialize=False)),
                ('objectprocessloghashkey', models.TextField(verbose_name='ObjectProcessLogHashkey')),
                ('objectobjectsnapshothashkey', models.TextField(verbose_name='ObjectSnapShot')),
                ('snapshot1value', models.TextField(verbose_name='SnapShot Value 1')),
                ('snapshot2value', models.TextField(verbose_name='SnapShot Value 2')),
                ('sourcesystemcreatedby', models.TextField()),
                ('sourcesystemcreatedtime', models.TextField()),
            ],
            options={
                'db_table': 'objectprocessobjectsnapshotlog',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ObjectType',
            fields=[
                ('objecttypehashkey', models.TextField(primary_key=True, serialize=False, verbose_name='Object Type Hashkey')),
                ('objecttype', models.TextField(verbose_name='Object Type')),
                ('sourcesystemcreatedby', models.TextField()),
                ('sourcesystemcreatedtime', models.TextField()),
            ],
            options={
                'db_table': 'objecttype',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ObjectUser',
            fields=[
                ('userhashkey', models.TextField(primary_key=True, serialize=False, verbose_name='UserHashkey')),
                ('username', models.TextField(verbose_name='Username')),
                ('resourcepool', models.TextField(verbose_name='ResourcePool')),
                ('sourcesystemcreatedby', models.TextField()),
                ('sourcesystemcreatedtime', models.TextField()),
            ],
            options={
                'db_table': 'objectuser',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('ownerhashkey', models.TextField(primary_key=True, serialize=False, verbose_name='OwnerHashKey')),
                ('ownername', models.TextField(verbose_name='Owner Name')),
                ('sourcesystemcreatedby', models.TextField()),
                ('sourcesystemcreatedtime', models.TextField()),
            ],
            options={
                'db_table': 'owner',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PartitionBy',
            fields=[
                ('objectpartitionhashkey', models.TextField(primary_key=True, serialize=False, verbose_name='Partition By HashKey')),
                ('partitionby', models.TextField(verbose_name='Partition By')),
                ('sourcesystemcreatedby', models.TextField()),
                ('sourcesystemcreatedtime', models.TextField()),
            ],
            options={
                'db_table': 'objectpartition',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Process',
            fields=[
                ('processhashkey', models.TextField(primary_key=True, serialize=False, verbose_name='ProcesHashkey')),
                ('processcode', models.TextField(verbose_name='Process Code')),
                ('processdesc', models.TextField(verbose_name='Process Description')),
                ('sourcesystemcreatedby', models.TextField()),
                ('sourcesystemcreatedtime', models.TextField()),
            ],
            options={
                'db_table': 'process',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Query',
            fields=[
                ('queryhashkey', models.TextField(primary_key=True, serialize=False, verbose_name='Query HashKey')),
                ('name', models.TextField(verbose_name='Query Name')),
                ('path', models.TextField(verbose_name='Path')),
                ('desc', models.TextField(verbose_name='Description')),
                ('sourcesystemcreatedby', models.TextField()),
                ('sourcesystemcreatedtime', models.TextField()),
            ],
            options={
                'db_table': 'query',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('serverhashkey', models.TextField(primary_key=True, serialize=False, verbose_name='Server HashKey')),
                ('servername', models.TextField(verbose_name='Server Name')),
                ('hostname', models.TextField(verbose_name='Hostname')),
                ('user', models.TextField(verbose_name='Username')),
                ('password', models.TextField(verbose_name='Password')),
                ('sourcesystemcreatedby', models.TextField()),
                ('sourcesystemcreatedtime', models.TextField()),
            ],
            options={
                'db_table': 'server',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ServerTunnel',
            fields=[
                ('servertunnelhashkey', models.TextField(primary_key=True, serialize=False, verbose_name='Server Tunnel HashKey')),
                ('servertunnelname', models.TextField(verbose_name='Server Name')),
                ('hostname', models.TextField(verbose_name='Hostname')),
                ('port', models.TextField(verbose_name='Port')),
                ('user', models.TextField(verbose_name='Username')),
                ('password', models.TextField(verbose_name='Password')),
                ('private_key_user', models.TextField(verbose_name='Private Key User')),
                ('private_key_password', models.TextField(verbose_name='Private Key Password')),
                ('sourcesystemcreatedby', models.TextField()),
                ('sourcesystemcreatedtime', models.TextField()),
            ],
            options={
                'db_table': 'servertunnel',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SnapShot',
            fields=[
                ('objectsnapshothashkey', models.TextField(primary_key=True, serialize=False, verbose_name='Object SnapShot HashKey')),
                ('snapshot1', models.TextField(verbose_name='SnapShot 1')),
                ('snapshot2', models.TextField(verbose_name='SnapShot 2')),
                ('sourcesystemcreatedby', models.TextField()),
                ('sourcesystemcreatedtime', models.TextField()),
            ],
            options={
                'db_table': 'objectsnapshot',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StorageEngine',
            fields=[
                ('storageenginehashkey', models.TextField(primary_key=True, serialize=False, verbose_name='StorageEngineHashkey')),
                ('storageenginetype', models.TextField(verbose_name='Storage Engine Type')),
                ('sourcesystemcreatedby', models.TextField()),
                ('sourcesystemcreatedtime', models.TextField()),
            ],
            options={
                'db_table': 'storageengine',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProcessEngine',
            fields=[
                ('processenginehashkey', models.TextField(primary_key=True, serialize=False, verbose_name='ProcesEngineHashkey')),
                ('sourcesystemcreatedby', models.TextField()),
                ('sourcesystemcreatedtime', models.TextField()),
                ('enginehashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.Engine', verbose_name='EngineHashkey')),
                ('processhashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.Process', verbose_name='ProcesHashkey')),
            ],
            options={
                'db_table': 'processengine',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ObjectStorageEngine',
            fields=[
                ('objectstorageenginehashkey', models.TextField(primary_key=True, serialize=False, verbose_name='Object Storage Engine HashKey')),
                ('sourcesystemcreatedby', models.TextField()),
                ('sourcesystemcreatedtime', models.TextField()),
                ('objecthashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.Object', verbose_name='Object Hash Key')),
                ('storageenginehashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.StorageEngine', verbose_name='Storage Engine HashKey')),
            ],
            options={
                'db_table': 'objectstorageengine',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ObjectServerTunnel',
            fields=[
                ('objectservertunnelhashkey', models.TextField(primary_key=True, serialize=False, verbose_name='Object Server Tunnel HashKey')),
                ('sourcesystemcreatedby', models.TextField()),
                ('sourcesystemcreatedtime', models.TextField()),
                ('objecthashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.Object', verbose_name='Object Hash Key')),
                ('servertunnelhashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.ServerTunnel', verbose_name='Server Tunnel HashKey')),
            ],
            options={
                'db_table': 'objectservertunnel',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ObjectServer',
            fields=[
                ('objectserverhashkey', models.TextField(primary_key=True, serialize=False, verbose_name='Object Server HashKey')),
                ('sourcesystemcreatedby', models.TextField()),
                ('sourcesystemcreatedtime', models.TextField()),
                ('objecthashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.Object', verbose_name='Object Hash Key')),
                ('serverhashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.Server', verbose_name='Server HashKey')),
            ],
            options={
                'db_table': 'objectserver',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ObjectQuery',
            fields=[
                ('objectqueryhashkey', models.TextField(primary_key=True, serialize=False, verbose_name='Object Query HashKey')),
                ('sourcesystemcreatedby', models.TextField()),
                ('sourcesystemcreatedtime', models.TextField()),
                ('objecthashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.Object', verbose_name='Object Hash Key')),
                ('queryhashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.Query', verbose_name='Query HashKey')),
            ],
            options={
                'db_table': 'objectquery',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ObjectProcess',
            fields=[
                ('objectprocesshashkey', models.TextField(primary_key=True, serialize=False, verbose_name='Object ProcessHashkey')),
                ('sourcesystemcreatedby', models.TextField()),
                ('sourcesystemcreatedtime', models.TextField()),
                ('dest_objecthashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dest_objecthashkey', to='framework.Object', verbose_name='Destination ObjectHashkey')),
                ('processenginehashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.ProcessEngine', verbose_name='Proces Engine Hashkey')),
                ('src_objecthashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='src_objecthashkey', to='framework.Object', verbose_name='Source ObjectHashkey')),
                ('userhashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.ObjectUser', verbose_name='UserHashkey')),
            ],
            options={
                'db_table': 'objectprocess',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ObjectOwner',
            fields=[
                ('objectownerhashkey', models.TextField(primary_key=True, serialize=False, verbose_name='Object Owner Hashkey')),
                ('sourcesystemcreatedby', models.TextField()),
                ('sourcesystemcreatedtime', models.TextField()),
                ('objecthashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.Object', verbose_name='Object HashKey')),
                ('ownerhashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.Owner', verbose_name='Owner Hash Key')),
            ],
            options={
                'db_table': 'objectowner',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ObjectObjectType',
            fields=[
                ('objectobjecttypehashkey', models.TextField(primary_key=True, serialize=False, verbose_name='Object Object Type')),
                ('sourcesystemcreatedby', models.TextField()),
                ('sourcesystemcreatedtime', models.TextField()),
                ('objecthashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.Object', verbose_name='ObjectHashkey')),
                ('objecttypehashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.ObjectType', verbose_name='Object Type Hashkey')),
            ],
            options={
                'db_table': 'objectobjecttype',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ObjectObjectSnapShot',
            fields=[
                ('objectobjectsnapshothashkey', models.TextField(primary_key=True, serialize=False, verbose_name='Object Snapshot')),
                ('snapshot1value', models.TextField(verbose_name='Snapshot 1 Value')),
                ('snapshot2value', models.TextField(verbose_name='Snapshot 2 Value')),
                ('sourcesystemcreatedby', models.TextField()),
                ('sourcesystemcreatedtime', models.TextField()),
                ('objecthashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.Object', verbose_name='ObjectHashkey')),
                ('objectsnapshothashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.SnapShot', verbose_name='SnapShot Hashkey')),
            ],
            options={
                'db_table': 'objectobjectsnapshot',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ObjectObjectPartition',
            fields=[
                ('objectobjectpartitionhashkey', models.TextField(primary_key=True, serialize=False, verbose_name='Object Partition')),
                ('sourcesystemcreatedby', models.TextField()),
                ('sourcesystemcreatedtime', models.TextField()),
                ('objecthashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.Object', verbose_name='ObjectHashkey')),
                ('objectpartitionhashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.PartitionBy', verbose_name='Partition Hashkey')),
            ],
            options={
                'db_table': 'objectobjectpartition',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ObjectFile',
            fields=[
                ('objectfilehashkey', models.TextField(primary_key=True, serialize=False, verbose_name='Object File Hashkey')),
                ('sourcesystemcreatedby', models.TextField()),
                ('sourcesystemcreatedtime', models.TextField()),
                ('filehashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.File', verbose_name='File HashKey')),
                ('objecthashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.Object', verbose_name='ObjectHashkey')),
            ],
            options={
                'db_table': 'objectfile',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ObjectDesc',
            fields=[
                ('objectdeschashkey', models.TextField(primary_key=True, serialize=False, verbose_name='Object Desc Hashkey')),
                ('deschashkey', models.TextField(verbose_name='Column Name')),
                ('datatype', models.TextField(verbose_name='Column Type')),
                ('length', models.TextField(null=True, verbose_name='Length')),
                ('nullable', models.TextField(null=True, verbose_name='Nullabel')),
                ('primary', models.TextField(null=True, verbose_name='Primary')),
                ('sourcesystemcreatedby', models.TextField()),
                ('sourcesystemcreatedtime', models.TextField()),
                ('objecthashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='objecthashkey_id', to='framework.Object', verbose_name='ObjectHashkey')),
            ],
            options={
                'db_table': 'objectdesc',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ObjectDatabase',
            fields=[
                ('objectdatabasehashkey', models.TextField(primary_key=True, serialize=False, verbose_name='Object DatabaseHashkey')),
                ('sourcesystemcreatedby', models.TextField()),
                ('sourcesystemcreatedtime', models.TextField()),
                ('databasehashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.Database', verbose_name='DatabaseHashkey')),
                ('objecthashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.Object', verbose_name='ObjectHashkey')),
            ],
            options={
                'db_table': 'objectdatabase',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CreateObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objectname', models.CharField(max_length=50, verbose_name='Object Name')),
                ('objectdesc', models.CharField(max_length=255, verbose_name='objectdesc')),
                ('sourcesystemcreatedby', models.TextField(default='Testing')),
                ('sourcesystemcreatedtime', models.TextField()),
                ('databasehashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.Database')),
                ('filehashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.File')),
                ('objectdeschash', models.ForeignKey(default='No ObjectDesc', null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.ObjectDesc')),
                ('objecthashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.Object')),
                ('objectpartitionhashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.PartitionBy')),
                ('objectsnapshothashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.SnapShot')),
                ('objecttypehashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.ObjectType')),
                ('ownerhashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.Owner')),
                ('queryhashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.Query')),
                ('serverhashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.Server')),
                ('servertunnelhashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.ServerTunnel')),
                ('storageenginehashkey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='framework.StorageEngine')),
            ],
            options={
                'db_table': 'createobject',
                'managed': True,
            },
        ),
    ]
